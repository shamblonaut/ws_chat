<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>WebSocket Chat</title>
    <style>
      body,
      html {
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
        height: 100%;
      }
      .chat-container {
        display: grid;
        grid-template-rows: auto 1fr auto;
        height: 100vh;
        background-color: #f0f0f0;
      }
      .chat-header {
        background-color: #4a69bd;
        color: white;
        padding: 10px 20px;
        text-align: center;
        font-size: 1.5em;
      }
      .chat-messages {
        overflow-y: auto;
        padding: 20px;
        display: flex;
        flex-direction: column;
      }
      .message {
        max-width: 80%;
        margin-bottom: 15px;
        padding: 10px 15px;
        border-radius: 20px;
        background-color: #e3e3e3;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
        word-wrap: break-word;
      }
      .message.received {
        align-self: flex-start;
        background-color: #ffffff;
      }
      .message.sent {
        align-self: flex-end;
        background-color: #4a69bd;
        color: white;
      }
      .message-info {
        font-size: 0.8em;
        margin-bottom: 5px;
        opacity: 0.7;
      }
      .chat-input {
        display: grid;
        grid-template-columns: 1fr auto;
        padding: 20px;
        background-color: white;
        border-top: 1px solid #e3e3e3;
      }
      #messageInput {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 20px;
        font-size: 1em;
      }
      button {
        padding: 10px 20px;
        background-color: #4a69bd;
        color: white;
        border: none;
        border-radius: 20px;
        cursor: pointer;
        font-size: 1em;
        margin-left: 10px;
      }
      button:hover {
        background-color: #3c5aa6;
      }
    </style>
  </head>
  <body>
    <div class="chat-container">
      <div class="chat-header">WebSocket Chat</div>
      <div id="messages" class="chat-messages"></div>
      <div class="chat-input">
        <input type="text" id="messageInput" placeholder="Type a message..." />
        <button onclick="sendMessage()">Send</button>
      </div>
    </div>

    <script>
      const wsProtocol = window.location.protocol === "https:" ? "wss:" : "ws:";
      const socket = new WebSocket(
        `${wsProtocol}//${window.location.host}/chat/ws`,
      );
      const messages = document.getElementById("messages");
      const messageInput = document.getElementById("messageInput");

      let myId = null;

      socket.onopen = function (e) {
        addMessage("Connected to server", "System");
      };

      socket.onmessage = function (event) {
        const data = JSON.parse(event.data);
        // Check if the message contains the client ID
        if (data.client_id && !myId) {
          myId = data.client_id;
          return;
        }

        // Handle normal chat messages
        addMessage(
          data.message,
          data.from_id,
          data.from_ip,
          data.from_id === myId,
        );
      };

      socket.onclose = function (event) {
        addMessage("Disconnected from server", "System");
      };

      function addMessage(message, fromId, fromIp, isSent) {
        const messageElement = document.createElement("div");
        messageElement.className = `message ${isSent ? "sent" : "received"}`;

        const infoElement = document.createElement("div");
        infoElement.className = "message-info";
        infoElement.textContent =
          fromId === "System" ? "System" : `${fromId} (${fromIp})`;

        const contentElement = document.createElement("div");
        contentElement.textContent = message;

        messageElement.appendChild(infoElement);
        messageElement.appendChild(contentElement);
        messages.appendChild(messageElement);
        messages.scrollTop = messages.scrollHeight;
      }

      function sendMessage() {
        const message = messageInput.value.trim();
        if (message) {
          socket.send(message);
          messageInput.value = "";
        }
      }

      messageInput.addEventListener("keypress", function (e) {
        if (e.key === "Enter") {
          sendMessage();
        }
      });
    </script>
  </body>
</html>
